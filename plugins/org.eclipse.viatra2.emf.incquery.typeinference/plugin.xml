<?xml version="1.0" encoding="UTF-8"?>
<plugin>

   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainInParameters"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.classconstraininparameters.ClassConstrainInParametersMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainInParameters">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainInDirectBodyByEntities"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.classconstrainindirectbodybyentities.ClassConstrainInDirectBodyByEntitiesMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainInDirectBodyByEntities">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.getHeadOfPathConstrain"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.getheadofpathconstrain.GetHeadOfPathConstrainMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.getHeadOfPathConstrain">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.nextTailOfPathExpression"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.nexttailofpathexpression.NextTailOfPathExpressionMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.nextTailOfPathExpression">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.getTailOfPathConstrain"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.gettailofpathconstrain.GetTailOfPathConstrainMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.getTailOfPathConstrain">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainsInDirectBodyByRelations"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.classconstrainsindirectbodybyrelations.ClassConstrainsInDirectBodyByRelationsMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainsInDirectBodyByRelations">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.subpatternWithVariable"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.subpatternwithvariable.SubpatternWithVariableMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.subpatternWithVariable">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainInPatternBody"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.classconstraininpatternbody.ClassConstrainInPatternBodyMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainInPatternBody">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.incompatibleTypeOfParameterOfPattern"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.incompatibletypeofparameterofpattern.IncompatibleTypeOfParameterOfPatternMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.incompatibleTypeOfParameterOfPattern">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.compatibleTypeOfParameterOfPattern"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.compatibletypeofparameterofpattern.CompatibleTypeOfParameterOfPatternMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.compatibleTypeOfParameterOfPattern">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.haveMoreSpecificType"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.havemorespecifictype.HaveMoreSpecificTypeMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.haveMoreSpecificType">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.TypeOfParameterOfPattern"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.typeofparameterofpattern.TypeOfParameterOfPatternMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.TypeOfParameterOfPattern">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.haveSatisfiableBodyOfPatternParameter"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.havesatisfiablebodyofpatternparameter.HaveSatisfiableBodyOfPatternParameterMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.haveSatisfiableBodyOfPatternParameter">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.UnsatisfiableTypeOfPatternParameter"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.unsatisfiabletypeofpatternparameter.UnsatisfiableTypeOfPatternParameterMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.UnsatisfiableTypeOfPatternParameter">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.tooGeneralTypeOfPatternParameter"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.toogeneraltypeofpatternparameter.TooGeneralTypeOfPatternParameterMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.tooGeneralTypeOfPatternParameter">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.variableOfPattern"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.variableofpattern.VariableOfPatternMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.variableOfPattern">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.incompatibleTypeOfVariableInBody"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.incompatibletypeofvariableinbody.IncompatibleTypeOfVariableInBodyMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.incompatibleTypeOfVariableInBody">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.compatibleTypeOfVariableInBody"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.compatibletypeofvariableinbody.CompatibleTypeOfVariableInBodyMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.compatibleTypeOfVariableInBody">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.UnsatisfiableTypeConstrainInPatternBody"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.unsatisfiabletypeconstraininpatternbody.UnsatisfiableTypeConstrainInPatternBodyMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.UnsatisfiableTypeConstrainInPatternBody">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.UnsatisfiableTypeConstrainInPatternBodyBecauseThoseConstrainsSays"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.unsatisfiabletypeconstraininpatternbodybecausethoseconstrainssays.UnsatisfiableTypeConstrainInPatternBodyBecauseThoseConstrainsSaysMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.UnsatisfiableTypeConstrainInPatternBodyBecauseThoseConstrainsSays">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.haveMoreGenericType"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.havemoregenerictype.HaveMoreGenericTypeMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.haveMoreGenericType">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.typeOfVariableInBody"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.typeofvariableinbody.TypeOfVariableInBodyMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.typeOfVariableInBody">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.tooGeneralTypeOfVariableInBody"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.toogeneraltypeofvariableinbody.TooGeneralTypeOfVariableInBodyMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.tooGeneralTypeOfVariableInBody">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.simmetricCompare"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.simmetriccompare.SimmetricCompareMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.simmetricCompare">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.supportedValueReference"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.supportedvaluereference.SupportedValueReferenceMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.supportedValueReference">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.ComparableValueReference"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.comparablevaluereference.ComparableValueReferenceMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.ComparableValueReference">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.unsatisfiableCompare"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.unsatisfiablecompare.UnsatisfiableCompareMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.unsatisfiableCompare">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.hasCommonSubclass"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.hascommonsubclass.HasCommonSubclassMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.hasCommonSubclass">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.tautologycCompare"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.tautologyccompare.TautologycCompareMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.tautologycCompare">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainFromValueReference"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.classconstrainfromvaluereference.ClassConstrainFromValueReferenceMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainFromValueReference">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainFromCompare"
         name=""
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.classconstrainfromcompare.ClassConstrainFromCompareMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.ClassConstrainFromCompare">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.directSupertype"
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.directsupertype.DirectSupertypeMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.directSupertype">
      </matcher>
   </extension>
   <extension
         id="org.eclipse.viatra2.emf.incquery.typeinference.supertype"
         point="org.eclipse.viatra2.emf.incquery.matcherfactory">
      <matcher
            factory="org.eclipse.viatra2.emf.incquery.typeinference.supertype.SupertypeMatcherFactory"
            id="org.eclipse.viatra2.emf.incquery.typeinference.supertype">
      </matcher>
   </extension>

</plugin>
